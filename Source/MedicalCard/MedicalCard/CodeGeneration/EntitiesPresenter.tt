<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ output extension="txt" #>
<#@ include file="T4Toolbox.tt" #>
<#
// <copyright file="EntityDataAccess.tt" company="TU">
//  Copyright © . All Rights Reserved.
// </copyright>
string MyClass = "Diagnosis"; 
string myClass = MyClass.ToLower()[0]+MyClass.Substring(1);

string MyClasses = "Diagnoses";//MyClass+"s";
string myClasses = MyClasses.ToLower()[0]+MyClasses.Substring(1);

string DataContext = "MedicalCardEntities" ;

#>
// I<#=MyClasses #>Presenter.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using MedicalCard.View;
using MedicalCard.Data;

namespace MedicalCard.Logic
{
    public class <#=MyClasses #>Presenter
    {

        public <#=MyClasses #>Presenter(I<#=MyClasses #>View view)
        {
            this.View = view;
        }

        private IEnumerable<<#=MyClass #>> _<#=myClasses #>;
        public IEnumerable<<#=MyClass #>> <#=MyClasses #>
        {
            get
            {
                return _<#=myClasses #>;
            }
            set
            {
                _<#=myClasses #> = value;
                View.<#=MyClasses #> = _<#=myClasses #>;
            }
        }

        private string _message;
        public string Message
        {
            get
            {
                return _message;
            }
            set
            {
                _message = value;
                View.Message = _message;
            }
        }

        public I<#=MyClasses #>View View { get; set; }

        /// <summary>
        /// Filters <#=myClasses #> by name and number and sets the datagrdview source
        /// </summary>
        /// <param name="name"></param>
        /// <param name="number"></param>
        public void Load<#=MyClasses #>ByCriterias(string name, string number)
        {
            try
            {
                IQueryable<<#=MyClass #>> <#=myClasses #>Query;
                <#=myClasses #>Query = <#=MyClasses #>DataAccess.Get<#=MyClasses #>();
                if (!string.IsNullOrEmpty(name))
                {
                    <#=myClasses #>Query = <#=myClasses #>Query.Where(p => p.Name.Contains(name));
                }

                if (!string.IsNullOrEmpty(number))
                {
                    <#=myClasses #>Query = <#=myClasses #>Query.Where(p => p.Number.Contains(number));
                }
                this.<#=MyClasses #> = <#=myClasses #>Query.ToList();
            }
            catch (Exception e)
            {
                this.Message = "Грешка при заявка към базатa от данни!Обадете се на администратор!";
            }
        }

        internal void LoadAll<#=MyClasses #>()
        {
            this.Load<#=MyClasses #>ByCriterias(string.Empty, string.Empty);
        }
    }
}
