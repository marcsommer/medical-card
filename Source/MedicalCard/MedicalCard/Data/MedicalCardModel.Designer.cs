//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Consultations_Doctors", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Doctor), "Consultations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.Consultation), true)]
[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Consultations_Patients", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Patient), "Consultations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.Consultation), true)]
[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Diagnoses_Doctors", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Doctor), "Diagnoses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.Diagnosis), true)]
[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Diagnoses_Patients", "Patients", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Patient), "Diagnoses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.Diagnosis), true)]
[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Users_Doctors", "Doctors", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Doctor), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.User), true)]
[assembly: EdmRelationshipAttribute("MedicalCardModel", "FK_Users_Patients", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MedicalCard.Data.Patient), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MedicalCard.Data.User), true)]

#endregion

namespace MedicalCard.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MedicalCardEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MedicalCardEntities object using the connection string found in the 'MedicalCardEntities' section of the application configuration file.
        /// </summary>
        public MedicalCardEntities() : base("name=MedicalCardEntities", "MedicalCardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MedicalCardEntities object.
        /// </summary>
        public MedicalCardEntities(string connectionString) : base(connectionString, "MedicalCardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MedicalCardEntities object.
        /// </summary>
        public MedicalCardEntities(EntityConnection connection) : base(connection, "MedicalCardEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Consultation> Consultations
        {
            get
            {
                if ((_Consultations == null))
                {
                    _Consultations = base.CreateObjectSet<Consultation>("Consultations");
                }
                return _Consultations;
            }
        }
        private ObjectSet<Consultation> _Consultations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Diagnosis> Diagnoses
        {
            get
            {
                if ((_Diagnoses == null))
                {
                    _Diagnoses = base.CreateObjectSet<Diagnosis>("Diagnoses");
                }
                return _Diagnoses;
            }
        }
        private ObjectSet<Diagnosis> _Diagnoses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Doctor> Doctors
        {
            get
            {
                if ((_Doctors == null))
                {
                    _Doctors = base.CreateObjectSet<Doctor>("Doctors");
                }
                return _Doctors;
            }
        }
        private ObjectSet<Doctor> _Doctors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Consultations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConsultations(Consultation consultation)
        {
            base.AddObject("Consultations", consultation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Diagnoses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagnoses(Diagnosis diagnosis)
        {
            base.AddObject("Diagnoses", diagnosis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Doctors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDoctors(Doctor doctor)
        {
            base.AddObject("Doctors", doctor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedicalCardModel", Name="Consultation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Consultation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Consultation object.
        /// </summary>
        /// <param name="consultationId">Initial value of the ConsultationId property.</param>
        public static Consultation CreateConsultation(global::System.Int32 consultationId)
        {
            Consultation consultation = new Consultation();
            consultation.ConsultationId = consultationId;
            return consultation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConsultationId
        {
            get
            {
                return _ConsultationId;
            }
            set
            {
                if (_ConsultationId != value)
                {
                    OnConsultationIdChanging(value);
                    ReportPropertyChanging("ConsultationId");
                    _ConsultationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConsultationId");
                    OnConsultationIdChanged();
                }
            }
        }
        private global::System.Int32 _ConsultationId;
        partial void OnConsultationIdChanging(global::System.Int32 value);
        partial void OnConsultationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduleDate
        {
            get
            {
                return _ScheduleDate;
            }
            set
            {
                OnScheduleDateChanging(value);
                ReportPropertyChanging("ScheduleDate");
                _ScheduleDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleDate");
                OnScheduleDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduleDate;
        partial void OnScheduleDateChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduleDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> ScheduleTime
        {
            get
            {
                return _ScheduleTime;
            }
            set
            {
                OnScheduleTimeChanging(value);
                ReportPropertyChanging("ScheduleTime");
                _ScheduleTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTime");
                OnScheduleTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _ScheduleTime;
        partial void OnScheduleTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnScheduleTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientId;
        partial void OnPatientIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Conclusion
        {
            get
            {
                return _Conclusion;
            }
            set
            {
                OnConclusionChanging(value);
                ReportPropertyChanging("Conclusion");
                _Conclusion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Conclusion");
                OnConclusionChanged();
            }
        }
        private global::System.String _Conclusion;
        partial void OnConclusionChanging(global::System.String value);
        partial void OnConclusionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Consultations_Doctors", "Doctors")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Consultations_Doctors", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Consultations_Doctors", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Consultations_Doctors", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("MedicalCardModel.FK_Consultations_Doctors", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Consultations_Patients", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Consultations_Patients", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Consultations_Patients", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Consultations_Patients", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("MedicalCardModel.FK_Consultations_Patients", "Patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedicalCardModel", Name="Diagnosis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Diagnosis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Diagnosis object.
        /// </summary>
        /// <param name="diagnoseId">Initial value of the DiagnoseId property.</param>
        public static Diagnosis CreateDiagnosis(global::System.Int32 diagnoseId)
        {
            Diagnosis diagnosis = new Diagnosis();
            diagnosis.DiagnoseId = diagnoseId;
            return diagnosis;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DiagnoseId
        {
            get
            {
                return _DiagnoseId;
            }
            set
            {
                if (_DiagnoseId != value)
                {
                    OnDiagnoseIdChanging(value);
                    ReportPropertyChanging("DiagnoseId");
                    _DiagnoseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DiagnoseId");
                    OnDiagnoseIdChanged();
                }
            }
        }
        private global::System.Int32 _DiagnoseId;
        partial void OnDiagnoseIdChanging(global::System.Int32 value);
        partial void OnDiagnoseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientId;
        partial void OnPatientIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subect
        {
            get
            {
                return _Subect;
            }
            set
            {
                OnSubectChanging(value);
                ReportPropertyChanging("Subect");
                _Subect = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subect");
                OnSubectChanged();
            }
        }
        private global::System.String _Subect;
        partial void OnSubectChanging(global::System.String value);
        partial void OnSubectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DiagnosticationDate
        {
            get
            {
                return _DiagnosticationDate;
            }
            set
            {
                OnDiagnosticationDateChanging(value);
                ReportPropertyChanging("DiagnosticationDate");
                _DiagnosticationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DiagnosticationDate");
                OnDiagnosticationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DiagnosticationDate;
        partial void OnDiagnosticationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDiagnosticationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prescription
        {
            get
            {
                return _Prescription;
            }
            set
            {
                OnPrescriptionChanging(value);
                ReportPropertyChanging("Prescription");
                _Prescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prescription");
                OnPrescriptionChanged();
            }
        }
        private global::System.String _Prescription;
        partial void OnPrescriptionChanging(global::System.String value);
        partial void OnPrescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Diagnoses_Doctors", "Doctors")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Diagnoses_Doctors", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Diagnoses_Doctors", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Diagnoses_Doctors", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("MedicalCardModel.FK_Diagnoses_Doctors", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Diagnoses_Patients", "Patients")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Diagnoses_Patients", "Patients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Diagnoses_Patients", "Patients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Diagnoses_Patients", "Patients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("MedicalCardModel.FK_Diagnoses_Patients", "Patients", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedicalCardModel", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Doctor object.
        /// </summary>
        /// <param name="doctorId">Initial value of the DoctorId property.</param>
        public static Doctor CreateDoctor(global::System.Int32 doctorId)
        {
            Doctor doctor = new Doctor();
            doctor.DoctorId = doctorId;
            return doctor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                if (_DoctorId != value)
                {
                    OnDoctorIdChanging(value);
                    ReportPropertyChanging("DoctorId");
                    _DoctorId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DoctorId");
                    OnDoctorIdChanged();
                }
            }
        }
        private global::System.Int32 _DoctorId;
        partial void OnDoctorIdChanging(global::System.Int32 value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Skils
        {
            get
            {
                return _Skils;
            }
            set
            {
                OnSkilsChanging(value);
                ReportPropertyChanging("Skils");
                _Skils = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Skils");
                OnSkilsChanged();
            }
        }
        private global::System.String _Skils;
        partial void OnSkilsChanging(global::System.String value);
        partial void OnSkilsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Consultations_Doctors", "Consultations")]
        public EntityCollection<Consultation> Consultations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Consultation>("MedicalCardModel.FK_Consultations_Doctors", "Consultations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Consultation>("MedicalCardModel.FK_Consultations_Doctors", "Consultations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Diagnoses_Doctors", "Diagnoses")]
        public EntityCollection<Diagnosis> Diagnoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnosis>("MedicalCardModel.FK_Diagnoses_Doctors", "Diagnoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnosis>("MedicalCardModel.FK_Diagnoses_Doctors", "Diagnoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Users_Doctors", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MedicalCardModel.FK_Users_Doctors", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MedicalCardModel.FK_Users_Doctors", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedicalCardModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        public static Patient CreatePatient(global::System.Int32 patientId, global::System.String name, global::System.String number)
        {
            Patient patient = new Patient();
            patient.PatientId = patientId;
            patient.Name = name;
            patient.Number = number;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                if (_PatientId != value)
                {
                    OnPatientIdChanging(value);
                    ReportPropertyChanging("PatientId");
                    _PatientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientId");
                    OnPatientIdChanged();
                }
            }
        }
        private global::System.Int32 _PatientId;
        partial void OnPatientIdChanging(global::System.Int32 value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Birthdate
        {
            get
            {
                return _Birthdate;
            }
            set
            {
                OnBirthdateChanging(value);
                ReportPropertyChanging("Birthdate");
                _Birthdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthdate");
                OnBirthdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Birthdate;
        partial void OnBirthdateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Consultations_Patients", "Consultations")]
        public EntityCollection<Consultation> Consultations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Consultation>("MedicalCardModel.FK_Consultations_Patients", "Consultations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Consultation>("MedicalCardModel.FK_Consultations_Patients", "Consultations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Diagnoses_Patients", "Diagnoses")]
        public EntityCollection<Diagnosis> Diagnoses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Diagnosis>("MedicalCardModel.FK_Diagnoses_Patients", "Diagnoses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Diagnosis>("MedicalCardModel.FK_Diagnoses_Patients", "Diagnoses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Users_Patients", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MedicalCardModel.FK_Users_Patients", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MedicalCardModel.FK_Users_Patients", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedicalCardModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static User CreateUser(global::System.Int32 userId)
        {
            User user = new User();
            user.UserId = userId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DoctorId
        {
            get
            {
                return _DoctorId;
            }
            set
            {
                OnDoctorIdChanging(value);
                ReportPropertyChanging("DoctorId");
                _DoctorId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoctorId");
                OnDoctorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DoctorId;
        partial void OnDoctorIdChanging(Nullable<global::System.Int32> value);
        partial void OnDoctorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private Nullable<global::System.Int16> _RoleId;
        partial void OnRoleIdChanging(Nullable<global::System.Int16> value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PatientId;
        partial void OnPatientIdChanging(Nullable<global::System.Int32> value);
        partial void OnPatientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Users_Doctors", "Doctors")]
        public Doctor Doctor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Users_Doctors", "Doctors").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Users_Doctors", "Doctors").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Doctor> DoctorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Doctor>("MedicalCardModel.FK_Users_Doctors", "Doctors");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Doctor>("MedicalCardModel.FK_Users_Doctors", "Doctors", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedicalCardModel", "FK_Users_Patients", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Users_Patients", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Users_Patients", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedicalCardModel.FK_Users_Patients", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("MedicalCardModel.FK_Users_Patients", "Patient", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
